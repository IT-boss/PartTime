package phxg.com.parttimejob.db;

import android.content.Context;
import android.database.sqlite.SQLiteDatabase;

import com.j256.ormlite.android.apptools.OrmLiteSqliteOpenHelper;
import com.j256.ormlite.dao.Dao;
import com.j256.ormlite.support.ConnectionSource;

import java.sql.SQLException;
import java.util.HashMap;
import java.util.Map;



public class DBOpenHelper extends OrmLiteSqliteOpenHelper {

    public static final String DATABASE_PATH = Config.DB_PATH;

    public final static String DATABASE_FILENAME = "cdz.db";

    public static final int DB_VERSION = 1; // 更新时候只需要修改这里就可以了

    /**
     * 用来存放Dao的地图
     */
    private Map<String, Dao> daos = new HashMap<String, Dao>();

    private static DBOpenHelper instance;


    /**
     * 获取单例
     *
     * @param context
     * @return
     */
    public static synchronized DBOpenHelper getHelper(Context context) {
        context = context.getApplicationContext();
        if (instance == null) {
            synchronized (DBOpenHelper.class) {
                if (instance == null) {
                    instance = new DBOpenHelper(context);
                }
            }
        }
        return instance;
    }

    private DBOpenHelper(Context context) {
        super(context, getDatabaseFile(context, DATABASE_FILENAME), null, DB_VERSION);
    }


    @Override
    public void onCreate(SQLiteDatabase sqLiteDatabase,
                         ConnectionSource connectionSource) {
    }

    @Override
    public void onUpgrade(SQLiteDatabase sqLiteDatabase,
                          ConnectionSource connectionSource, int oldVersion, int newVersion) {
    }

    //创建数据库路径
    private static String getDatabaseFile(Context context, String dbfile) {
        return DATABASE_PATH + "/" + dbfile;
    }
   /* private String getDatabaseFilepath(Context context) {
        return String.format(DATABASE_PATH, context.getApplicationInfo().packageName);
    }*/


    /**
     * 通过类来获得指定的Dao
     */
    public synchronized Dao getDao(Class clazz) throws SQLException {
        Dao dao = null;
        String className = clazz.getSimpleName();
        if (daos.containsKey(className)) {
            dao = super.getDao(clazz);
            daos.put(className, dao);
        }
        return dao;
    }

    /**
     * 释放资源
     */
    @Override
    public void close() {
        super.close();
        for (String key : daos.keySet()) {
            Dao dao = daos.get(key);
            dao = null;
        }
    }
}
